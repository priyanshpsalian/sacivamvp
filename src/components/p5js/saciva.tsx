"use client"

// p5js/Saciva.tsx
import p5 from 'p5';
import { useEffect, useRef } from 'react';

const Sacivap5js = () => {
    const sketchRef = useRef<HTMLDivElement>(null);
    const svgRef = useRef<SVGSVGElement>(null);

    useEffect(() => {
        if(typeof window !== "undefined"){
            const sketch = (p: p5) => {
                let particles: Particle[] = [];
                const num = 2000;
                const noiseScale = 500;
                const noiseStrength = 1;
    
                class Particle {
                    loc: p5.Vector;
                    dir: p5.Vector;
                    speed: number;
    
                    constructor(_loc: p5.Vector, _dir: p5.Vector, _speed: number) {
                        this.loc = _loc;
                        this.dir = _dir;
                        this.speed = _speed;
                    }
    
                    run() {
                        this.move();
                        this.checkEdges();
                        this.update();
                    }
    
                    move() {
                        const angle = p.noise(this.loc.x / noiseScale, this.loc.y / noiseScale, p.frameCount / noiseScale) * p.TWO_PI * noiseStrength;
                        this.dir.x = p.cos(angle);
                        this.dir.y = p.sin(angle);
                        const vel = this.dir.copy();
                        vel.mult(this.speed);
                        this.loc.add(vel);
                    }
    
                    checkEdges() {
                        if (this.loc.x < 0 || this.loc.x > p.width || this.loc.y < 0 || this.loc.y > p.height) {
                            this.loc.x = p.random(p.width * 1.2);
                            this.loc.y = p.random(p.height);
                        }
                    }
    
                    update() {
                        p.fill(255);
                        p.ellipse(this.loc.x, this.loc.y, this.loc.z);
                    }
                }
    
                p.setup = () => {
                    p.createCanvas(p.windowWidth, p.windowHeight);
                    p.noStroke();
                    for (let i = 0; i < num; i++) {
                        const loc = p.createVector(p.random(p.width * 1.2), p.random(p.height), 2);
                        const dir = p.createVector(1, 0);
                        const speed = p.random(0.5, 2);
                        particles.push(new Particle(loc, dir, speed));
                    }
                };
    
                p.draw = () => {
                    p.fill(0, 10);
                    p.rect(0, 0, p.width, p.height);
                    particles.forEach((particle) => particle.run());
                };
    
                p.windowResized = () => {
                    p.resizeCanvas(p.windowWidth, p.windowHeight);
                };
            };

            const p5Instance = new p5(sketch, sketchRef.current!);
            return () => {
                p5Instance.remove();
            };
        }
      

        // Create the p5 instance

        // Cleanup the p5 instance on component unmount
        
    }, []);

    return (
        <>
            <div className="relative flex justify-center items-center w-full h-full mr-[-1rem] mb-[-1rem]">
                <div ref={sketchRef} className="absolute inset-0 w-full h-full"></div>
                <svg
                    ref={svgRef}
                    className="bg-transparent relative w-full h-auto"
                    width={720}
                    height={260}
                    viewBox="0 0 720 260"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"

                >
                    <path
                        d="M0 0V259.2H719.242V0H0ZM123.131 55.3945C123.129 56.5124 122.826 57.6091 122.253 58.5689C121.68 59.5288 120.859 60.3164 119.876 60.8486C118.893 61.3809 117.784 61.6381 116.667 61.5933C115.55 61.5484 114.466 61.2031 113.529 60.5937C107.465 56.7277 100.331 54.8836 93.1528 55.3263C75.8236 56.3305 61.8632 70.4842 61.0674 87.8097C60.7724 94.0636 62.2019 100.278 65.1998 105.775C68.1976 111.271 72.6485 115.838 78.0661 118.977C83.4837 122.115 89.6597 123.704 95.9192 123.57C102.179 123.436 108.281 121.584 113.559 118.216C114.496 117.612 115.579 117.271 116.694 117.229C117.809 117.188 118.914 117.448 119.894 117.981C120.873 118.515 121.691 119.303 122.26 120.262C122.83 121.221 123.131 122.315 123.131 123.431V200.584C123.131 202.232 122.477 203.811 121.312 204.976C120.147 206.141 118.568 206.795 116.92 206.795H20.0425C19.2253 206.795 18.4161 206.634 17.6613 206.321C16.9065 206.007 16.221 205.548 15.644 204.97C15.067 204.391 14.6099 203.704 14.2989 202.948C13.9879 202.192 13.8291 201.383 13.8316 200.565V184.669C13.8327 183.563 14.1287 182.478 14.6891 181.526C15.2495 180.573 16.0539 179.787 17.0194 179.249C17.9849 178.711 19.0765 178.441 20.1814 178.465C21.2864 178.49 22.3648 178.809 23.3053 179.39C28.5995 182.632 34.6771 184.37 40.8849 184.418C47.0928 184.465 53.1962 182.82 58.5394 179.659C63.8825 176.498 68.2634 171.941 71.2112 166.478C74.159 161.014 75.5623 154.851 75.2703 148.65C74.4821 131.468 60.7604 117.387 43.5979 116.193C36.4836 115.67 29.3847 117.393 23.3015 121.119C22.3612 121.701 21.2826 122.021 20.1772 122.047C19.0717 122.072 17.9796 121.801 17.0137 121.263C16.0478 120.725 15.2432 119.939 14.683 118.985C14.1229 118.032 13.8277 116.946 13.8278 115.84V39.0998C13.8278 37.4525 14.4822 35.8728 15.6469 34.708C16.8117 33.5432 18.3915 32.8888 20.0387 32.8888H116.92C118.568 32.8888 120.147 33.5432 121.312 34.708C122.477 35.8728 123.131 37.4525 123.131 39.0998V55.3945ZM327.304 206.689L238.653 206.776C237.071 206.778 235.547 206.175 234.394 205.09L196.374 169.34C195.224 168.258 193.705 167.655 192.126 167.654H192.104C191.288 167.654 190.481 167.815 189.727 168.127C188.974 168.439 188.29 168.896 187.713 169.473C187.137 170.05 186.68 170.735 186.368 171.488C186.056 172.242 185.896 173.049 185.896 173.865V200.558C185.896 201.374 185.735 202.183 185.423 202.937C185.11 203.692 184.651 204.377 184.073 204.954C183.495 205.531 182.809 205.988 182.054 206.299C181.3 206.611 180.491 206.77 179.674 206.769L136.201 206.689C135.383 206.691 134.573 206.531 133.817 206.218C133.062 205.906 132.375 205.447 131.797 204.869C131.219 204.29 130.76 203.603 130.448 202.847C130.137 202.091 129.977 201.281 129.979 200.463V39.1036C129.979 37.4563 130.633 35.8766 131.798 34.7118C132.963 33.547 134.543 32.8926 136.19 32.8926H165.808C167.454 32.8935 169.033 33.5478 170.197 34.7116L331.689 196.086C335.6 199.997 332.833 206.685 327.304 206.689ZM388.576 72.5419V81.5949C388.576 86.2371 383.688 89.1436 379.539 87.0707C374.813 84.7164 369.564 83.6089 364.29 83.8535C347.862 84.581 334.732 98.2724 334.648 114.715C334.627 120.015 335.961 125.232 338.524 129.87C341.087 134.509 344.793 138.415 349.291 141.217C353.79 144.019 358.93 145.625 364.223 145.88C369.517 146.136 374.788 145.033 379.535 142.677C380.482 142.196 381.536 141.965 382.598 142.007C383.659 142.048 384.692 142.361 385.599 142.915C386.505 143.469 387.255 144.245 387.776 145.171C388.297 146.097 388.573 147.14 388.576 148.203V200.497C388.576 202.141 387.925 203.718 386.764 204.882C385.603 206.047 384.028 206.703 382.384 206.708L357.719 206.784C356.902 206.787 356.092 206.629 355.336 206.318C354.58 206.007 353.894 205.55 353.315 204.973L190.713 42.9385C186.783 39.024 189.576 32.3091 195.12 32.328L382.384 32.9684C384.028 32.9734 385.603 33.63 386.764 34.7943C387.925 35.9585 388.576 37.5354 388.576 39.1794V72.5419ZM447.563 200.247C447.546 201.871 446.892 203.424 445.743 204.572C444.594 205.721 443.041 206.373 441.417 206.39L403.984 206.769C403.164 206.777 402.349 206.623 401.588 206.315C400.828 206.006 400.136 205.55 399.552 204.972C398.969 204.395 398.506 203.707 398.19 202.949C397.875 202.192 397.712 201.379 397.713 200.558V39.1945C397.709 37.5577 398.351 35.9854 399.5 34.8195C400.649 33.6536 402.211 32.9884 403.848 32.9684L443.008 32.4985C443.836 32.4889 444.656 32.6446 445.422 32.9564C446.189 33.2683 446.885 33.7301 447.47 34.3146C448.055 34.8992 448.518 35.5947 448.831 36.3605C449.143 37.1262 449.3 37.9468 449.291 38.7739L447.563 200.247ZM483.768 206.78H462.767C461.949 206.78 461.14 206.619 460.385 206.305C459.63 205.992 458.944 205.532 458.367 204.953C457.79 204.374 457.333 203.687 457.022 202.93C456.711 202.174 456.553 201.364 456.556 200.547L457.23 39.1832C457.235 37.5376 457.894 35.9613 459.06 34.8009C460.227 33.6405 461.807 32.9909 463.453 32.9949H500.055C500.876 32.9949 501.689 33.1577 502.446 33.4739C503.204 33.7901 503.891 34.2534 504.469 34.837C505.046 35.4207 505.502 36.113 505.81 36.874C506.117 37.635 506.271 38.4495 506.262 39.2703L505.883 76.0282C505.823 81.6101 512.583 84.4295 516.494 80.4619L561.638 34.8328C562.215 34.2493 562.903 33.7861 563.661 33.4699C564.419 33.1538 565.232 32.9911 566.053 32.9912H645.336C650.869 32.9912 653.639 39.6834 649.724 43.6017L488.156 204.961C486.992 206.124 485.414 206.777 483.768 206.776V206.78ZM710.526 200.463C710.526 202.108 709.873 203.686 708.711 204.851C707.549 206.015 705.972 206.671 704.327 206.674L660.858 206.754C660.041 206.755 659.232 206.596 658.477 206.284C657.722 205.973 657.036 205.515 656.459 204.939C655.881 204.362 655.422 203.676 655.109 202.922C654.796 202.168 654.635 201.359 654.635 200.543V173.865C654.635 172.218 653.981 170.638 652.816 169.473C651.651 168.308 650.072 167.654 648.424 167.654H648.402C646.82 167.654 645.298 168.257 644.146 169.34L606.126 205.09C604.974 206.176 603.45 206.779 601.867 206.776L513.22 206.689C507.687 206.689 504.921 199.997 508.835 196.079L670.309 34.7116C671.473 33.5478 673.051 32.8935 674.697 32.8926H704.315C705.963 32.8926 707.542 33.547 708.707 34.7118C709.872 35.8766 710.526 37.4563 710.526 39.1036V200.463Z"
                        fill="#F7F7F7"
                    />
                </svg>
            </div>
        </>

    );
};

export default Sacivap5js;